{
	"info": {
		"_postman_id": "9b6c076b-88dd-4ecb-ba9b-00bdc0423186",
		"name": "ultrapass_testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PassesPerStation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"number of passes in station attiki odos 12\", function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData[\"NumberOfPasses\"]).to.eql(4);",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}//passesperstation/:stationID/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"passesperstation",
						":stationID",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "stationID",
							"value": "AO10"
						},
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PassesAnalysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"number of passes with OP2_ID tag to OP1_ID stations\", function () {",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData[\"NumberOfPasses\"]).to.eql(103);",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passesanalysis/:op_1ID/:op_2ID/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passesanalysis",
						":op_1ID",
						":op_2ID",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "op_1ID",
							"value": "aodos",
							"description": "operator of the station"
						},
						{
							"key": "op_2ID",
							"value": "gefyra",
							"description": "operator of the tags"
						},
						{
							"key": "date_from",
							"value": "20200101"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PassesCostOK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"op_ko\", response[\"PassesCost\"]);",
							"",
							"pm.test(\"olympia_odos to kentriki_odos\", function () {",
							"   pm.expect(pm.globals.get(\"op_ko\")).to.eql(13.8);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passescost//:op_1ID/:op_2ID/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passescost",
						"",
						":op_1ID",
						":op_2ID",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "op_1ID",
							"value": "{{op_1ID}}"
						},
						{
							"key": "op_2ID",
							"value": "{{op_2ID}}"
						},
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PassesCostKO",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"op_ko\", response[\"PassesCost\"]);",
							"",
							"pm.test(\"kentriki_odos to olympia_odos\", function () {",
							"    pm.expect(pm.globals.get(\"op_ko\")).to.eql(8.85);",
							"});",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passescost//:op_2ID/:op_1ID/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passescost",
						"",
						":op_2ID",
						":op_1ID",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "op_2ID",
							"value": "{{op_2ID}}"
						},
						{
							"key": "op_1ID",
							"value": "{{op_1ID}}"
						},
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PassesCostOA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"op_oa\", response[\"PassesCost\"]);",
							"",
							"pm.test(\"olympia_odos to aodos\", function () {",
							"    pm.expect(pm.globals.get(\"op_oa\")).to.eql(39.199999999999996);",
							"});",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passescost/aodos/olympia_odos/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passescost",
						"aodos",
						"olympia_odos",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PassesCostOE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"op_oe\", response[\"PassesCost\"]);",
							"",
							"pm.test(\"olympia_odos to egnatia\", function () {",
							"    pm.expect(pm.globals.get(\"op_oe\")).to.eql(8.35);",
							"});",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passescost/egnatia/olympia_odos/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passescost",
						"egnatia",
						"olympia_odos",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PassesCostOG",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"op_og\", response[\"PassesCost\"]);",
							"",
							"pm.test(\"olympia_odos to gefyra\", function () {",
							"    pm.expect(pm.globals.get(\"op_og\")).to.eql(null);",
							"});",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passescost/gefyra/olympia_odos/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passescost",
						"gefyra",
						"olympia_odos",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PassesCostOK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"op_ok\", response[\"PassesCost\"]);",
							"",
							"pm.test(\"olympia_odos to kentriki_odos\", function () {",
							"    pm.expect(pm.globals.get(\"op_ok\")).to.eql(8.85);",
							"});",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passescost/kentriki_odos/olympia_odos/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passescost",
						"kentriki_odos",
						"olympia_odos",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PassesCostOM",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"op_om\", response[\"PassesCost\"]);",
							"",
							"pm.test(\"olympia_odos to moreas\", function () {",
							"    pm.expect(pm.globals.get(\"op_om\")).to.eql(9);",
							"});",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passescost/moreas/olympia_odos/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passescost",
						"moreas",
						"olympia_odos",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PassesCostON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"op_on\", response[\"PassesCost\"]);",
							"",
							"pm.test(\"olympia_odos to nea_odos\", function () {",
							"    pm.expect(pm.globals.get(\"op_on\")).to.eql(5.3);",
							"});",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passescost//nea_odos/olympia_odos/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passescost",
						"",
						"nea_odos",
						"olympia_odos",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ChargesBy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"const op_ox = [ pm.globals.get(\"op_oa\"),",
							"pm.globals.get(\"op_oe\"),",
							"pm.globals.get(\"op_og\"),",
							"pm.globals.get(\"op_ok\"),",
							"pm.globals.get(\"op_om\"),",
							"pm.globals.get(\"op_on\") ];",
							"const test = [0.0, 0.0, 15.0, 4.950000000000001, 0.0, 5.95, 0.0];",
							"pm.test(\"op_ID charges by\", function () {",
							"    for(i=0; i<6; i++){",
							"        if((response[\"PROList\"][i][\"PassesCost\"] - op_ox[i]) >0){",
							"        pm.expect(response[\"PROList\"][i][\"PassesCost\"] - op_ox[i]).to.eql(test[i]);",
							"        }",
							"    }",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/chargesby/:op_ID/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"chargesby",
						":op_ID",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "op_ID",
							"value": "{{op_ID}}"
						},
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "healthcheck",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"bookId\": 1,\n    \"customerName\": \"John\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/admin/healthcheck",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"healthcheck"
					]
				}
			},
			"response": []
		},
		{
			"name": "resetvehicles",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/admin/resetvehicles",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"resetvehicles"
					]
				}
			},
			"response": []
		},
		{
			"name": "resetstations",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/admin/resetstations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"resetstations"
					]
				}
			},
			"response": []
		},
		{
			"name": "resetpasses",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/admin/resetpasses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"admin",
						"resetpasses"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPassesCost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"op_1D to op_2ID\", function () {",
							"    var jsonData1 = pm.response.json();",
							"    pm.sendRequest(\"http://localhost:5000/passescost//:op_2ID/:op_1ID/:date_from/:date_to\", function (err, response) {",
							"    var jsonData2 = pm.response.json();",
							"    });",
							"    pm.expect(jsonData1[\"PassesCost\"]-jsonData2[\"PassesCost\"]).to.eql();",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/passescost//:op_1ID/:op_2ID/:date_from/:date_to",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"passescost",
						"",
						":op_1ID",
						":op_2ID",
						":date_from",
						":date_to"
					],
					"variable": [
						{
							"key": "op_1ID",
							"value": "{{op_1ID}}"
						},
						{
							"key": "op_2ID",
							"value": "{{op_1ID}}"
						},
						{
							"key": "date_from",
							"value": "{{date_from}}"
						},
						{
							"key": "date_to",
							"value": "{{date_to}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:5000"
		},
		{
			"key": "accessToken",
			"value": "---",
			"type": "string"
		}
	]
}